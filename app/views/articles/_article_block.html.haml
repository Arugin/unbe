- keywords article.tag_list
- description article.tiny_content
.row.bordered{itemscope:true, itemtype:'http://schema.org/Article'}
  %h4
    = link_to cycle_path(article.cycle) do
      = article.cycle.correct_title
    %span.divider /
    = link_to article_path(article), itemprop:"url" do
      %span{itemprop:"name"}= title article.title
  .news-user-avatar
    = render 'common/avatar', user: article.author
  .info
    .credentials
      .author
        = link_to profile_path(article.author) do
          %span{itemprop:'author', itemscope:true, itemtype:'http://schema.org/Person'}
            %span{itemprop:'name'}
              = article.author.name
      .publishDate
        %span{itemprop:'datePublished', content:article.created_at}
          = l article.created_at.in_time_zone, format: :short
    .clear
    .actions-info
      .inline-block{title: item_count_title(article.author, :have, :subscribers)}
        %i.fa.fa-users
        = article.author.subscribers.count
      .inline-block{title: item_count_title(article.author, :create, :cycles)}
        %i.fa.fa-folder-open-o
        = article.author.cycles.count
      .inline-block{title: item_count_title(article.author, :create, :articles)}
        %i.fa.fa-leaf
        = article.author.articles.count
      .inline-block{title: item_count_title(article.author, :comment, :comments)}
        %i.fa.fa-comment
        = article.author.comments.count
  .pull-right
    = render 'control_panel', article: article
  .clear
  .description{itemprop:'articleBody'}
    - unless article.clean_content.nil?
      = raw article.clean_content
    - else
      = raw article.tmpContent
  .clear
  .center
    - unless article.script.nil?
      = raw article.script
  .clear
  .pull-right
    .share42init{data:{url:article_url(article),title: article.title,description: article.tiny_content, path: "#{ENV["RAILS_RELATIVE_URL_ROOT"]}/assets/share42/", image:"#{article.get_logo_url.blank? ? '/images/common/filer.png': article.get_logo_url}"}}
