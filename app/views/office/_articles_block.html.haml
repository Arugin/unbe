= render partial: 'common/list_header'
- if @articles.blank?
  %p= t("NO_OFFICE_ARTICLES")
- else
  %ul.o-item-list
    - @articles.each do |article|
      %li.o-item
        .o-item-content
          .o-item-content-primary
            %span.o-item-checkbox
              %input{type: 'checkbox'}
            .o-thumb
              /= render partial: "#{collection}/thumb", locals: {item: item}
              = render partial: "articles/thumb", locals: {item: article}
            .o-info-container
              .o-title
                .o-title-container
                  - if article.is_changed?
                    = link_to article.title, draft_article_path(article)
                  - else
                    = link_to article.title, article_path(article)
              .publishDate
                = l article.created_at.in_time_zone, format: :short
              .clear
              .o-info
                .options
                  .btn-group
                    %button.btn
                      = link_to edit_article_path article do
                        Изменить
                    %button.btn.dropdown-toggle{:data => {:toggle => "dropdown"}}
                      %span.caret
                    %ul.dropdown-menu
                      %li
                        = link_to 'Опубликовать', publish_article_path(article)
          .o-item-content-secondary
            .o-metrics
              %span.metric= render partial: "common/views_count", locals: { subject: article, growth: true }
              %span.metric= render partial: "common/comments_count", locals: { subject: article }
              %span.metric= render :partial => "common/rate_count", locals: { subject: article }
            .o-indicators
              %span
                - if article.isUpdated
                  %i.fa.fa-pencil{title: t('ARTICLE_CHANGED')}
                - if article.is_garbage
                  %i.fa.fa-trash-o{title: t('ARTICLE_TRASH')}
              %span
                - unless article.isPublished
                  = link_to publish_article_path(article) do
                    = render :partial => 'yes_no',:locals => { :is_true => article.isPublished, :title=>"опубликована"}
                - else
                  = render :partial => 'yes_no',:locals => { :is_true => article.isPublished, :title=>"опубликована"}
              %span
                - if article.isUpdated && article.isPublished
                  %i.fa.fa-refresh
                - else
                  = render :partial => 'yes_no',:locals => { :is_true => article.isApproved, :title=>"подтверждена"}

= paginate @articles, :remote => true